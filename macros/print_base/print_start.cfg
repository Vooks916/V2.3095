[gcode_macro PRINT_START]
description: Machine heatup procedure before starting a print
gcode:
    # Extruder and bed temperatures
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heatsoak time of the bed in minutes and chamber temperature wanted
    {% set SOAK = params.SOAK|default(8)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|int %}
    {% set CHAMBER_MAXTIME = params.CHAMBER_MAXTIME|default(15)|int %}
    # Default material type to 'XXX'
    {% set MATERIAL = params.MATERIAL|default("ABS")|string %}
    # Get bounding box of the first layer
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    # Determine if Palette is used
    {% set PALETTE = params.PALETTE|default(0)|int %}

    # Set vars
    _USER_VARIABLES
    {% set V = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Px = printer["gcode_macro _USER_VARIABLES"].purge_bucket_x %}
    {% set Py = printer["gcode_macro _USER_VARIABLES"].purge_bucket_y %}
    {% set Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_z %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    CLEAR_PAUSE
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    STATUS_PRINTING_SKIRT
    STATUS_READY
    G90
    M83
    


    # 1 ----- HOMING ------------------------------------------
    # Home if not already homed and park the head near the center front
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}
    STATUS_BUSY
    G0 X{max_x|int / 2} Y{max_y|int / 3} Z2 F{St}
    
    # Turn on Nevermore Max
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1

    # 2 ----- BED HEATSOAK -------------------------------------
    # Heatsoak the bed if SOAK time is set and bed is not already warming up to the correct temperature (+-8Â°C).
    # We make the assumption that the soak is not needed if the bed is already at the correct target.
    # if a specific temperature need to be reached.
    STATUS_HEATING
    {% if (SOAK > 0) and (printer.heater_bed.target < (BED_TEMP - 8)) %}
        # Put the bed temperature target and wait for the soak
        #SET_LED_EFFECT EFFECT=printer_idle STOP=1
        #SET_LED_EFFECT EFFECT=bed_heating
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME={SOAK}
        #SET_LED_EFFECT EFFECT=bed_heating STOP=1
        #SET_LED_EFFECT EFFECT=printer_idle
    {% else %}  
        # Only heat the bed to the target and continue
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME=0
    {% endif %}

    # 3 ----- CHAMBER HEATSOAK ----------------------------------
    # If a setpoint is defined, then we wait to reach the chamber temperature (with a timeout in case it's winter...)
    {% if CHAMBER_TEMP > 0 %}
        # Wait for the temperature of the chamber to be reached (default max: 15min)
        HEATSOAK_CHAMBER TEMP={CHAMBER_TEMP} MAXTIME={CHAMBER_MAXTIME}
    {% endif %}

    #Preheat nozzle
    M109 S150

    # Clean nozzle
    STATUS_CLEANING
    CLEAN_NOZZLE
    
    # Calibrate beacon
    G28 Z METHOD=CONTACT CALIBRATE=1
    
    # 4 ----- QUAD GANTRY LEVELING -----------------------------
    {% if printer.quad_gantry_level.applied|lower == 'false' %}
        {% if V %}
            RESPOND MSG="QGL..."
        {% endif %}
        STATUS_LEVELING
        QUAD_GANTRY_LEVEL
    {% endif %}

    # 8 ----- BED MESH -------------------------------------------
    {% if V %}
        RESPOND MSG="Bed mesh measurement..."
    {% endif %}
    STATUS_MESHING
    BED_MESH_CALIBRATE RUNS=2

    G28 Z METHOD=CONTACT CALIBRATE=0

    # 5 ----- EXTRUDER HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket
    # and wait 30s to let the nozzle dilate and stabilize
    STATUS_HEATING
    G1 X{Px} Y{Py} Z{Pz|int + 20} F{St}
    M109 S{EXTRUDER_TEMP}
    G4 P{60000 * 0.5}
    {% if V %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}
    
    # 6 ----- PURGE --------------------------------
    # We first do a purge of the filament into the purge bucket to be ready to print
    # Then toolhead go for a quick cleaning of the nozzle tip
    STATUS_BUSY
    {% if V %}
        RESPOND MSG="Purge filament..."
    {% endif %}
    {% if PALETTE == 0 %}
    PURGE TEMP={EXTRUDER_TEMP}
    {% endif %}
    {% if V %}
        RESPOND MSG="Nozzle cleaning..."
    {% endif %}
    STATUS_CLEANING
    CLEAN_NOZZLE

    # set nozzle thermal expansion offset
    {% if printer.configfile.settings.beacon is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET 
    {% endif %}

    # 7 ----- MATERIAL PARAMETERS --------------------------------
    # Material dependant parameters like PA, firmware retraction, Z_offset, etc...
    RESPOND MSG="Material: {MATERIAL}"
    {% if MATERIAL == "PLA" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.024
        #SET_RETRACTION RETRACT_LENGTH=0.2 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
        #SET_GCODE_OFFSET Z=0.06
        #SET_GCODE_OFFSET Z_ADJUST={OFFSET} ### Can set individual offset per filament using slicer if needed
    {% elif MATERIAL == "FLEX" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.024
        #SET_GCODE_OFFSET Z=0.06
        #SET_RETRACTION RETRACT_LENGTH=0.2 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
        #SET_GCODE_OFFSET Z_ADJUST={OFFSET} ### Can set individual offset per filament using slicer if needed
    {% elif MATERIAL == "ABS" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.024
        #SET_RETRACTION RETRACT_LENGTH=0.2 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
        #SET_GCODE_OFFSET Z=0.06
        #SET_GCODE_OFFSET Z_ADJUST={OFFSET} ### Can set individual offset per filament using slicer if needed
    {% elif MATERIAL == "ASA" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.024
        #SET_RETRACTION RETRACT_LENGTH=0.2 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
        #SET_GCODE_OFFSET Z=0.06
        #SET_GCODE_OFFSET Z_ADJUST={OFFSET} ### Can set individual offset per filament using slicer if needed
    {% endif %}

    # 9 ----- PRINT !!! -------------------------------------------
    # Do a prime line, lower the lights and start the print
    STATUS_PRINTING
    {% if V %}
        RESPOND MSG="Start printing !"
    {% endif %}
    {% if PALETTE == 0 %}
    VORON_PURGE
    {% endif %}
    G92 E0.0